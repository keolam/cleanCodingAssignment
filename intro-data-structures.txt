1. A line of people at an amusement park ride.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

```js

array.push("Mary");

```

c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

```js
function findPerson(name, arr) {
  for (var i = 0; i < arr.length; i++) {
    if (arr[i] === name) {
    return i;
    }
  }
}
findPerson("Josh", array);
```


d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

```js

findPerson("Emily", array); //returns undefined

```

e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

```js

array.splice(1, 0, "Melissa");

f) If Patrick wants to leave the line, how would you delete him from the array?

array.splice(4, 1);

```

2. Provide another real-world example that you can model using a data structure

I would use an object to track the contents in my refrigerator:

```js

let refrigerator = {avocados: 3, beer: 12, carrots: 6, dates: 16, endives: 1};

```

3. How would your data structure allow developers to access and manipulate the data?

If my refrigerator were an IoT smart fridge, the refrigerator would track it's inventory and update the object as the content of the refrigerator changes. Developers could use this data in an app that tracks what I have in my fridge, and send notifications to a shopping-list app my phone so I have a list ready at all times, or it may also automatically reorder items for delivery. Another way this data could be manipulated, is to send retailers and marketing specialists info about my consumer habits, so they can make suggestions for other products I'd likely be interested in, or notifiy me when new products are introduced, or notify me when items of interest are on sale. 







